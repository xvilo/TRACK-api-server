<?php
/**
 * Timer
 *
 * PHP version 5
 *
 * @category Class
 * @package  Xvilo\Track\ApiServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * TRACK API Specification
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace Xvilo\Track\ApiServer\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Timer model.
 *
 * @package Xvilo\Track\ApiServer\Model
 * @author  OpenAPI Generator team
 */
class Timer 
{
        /**
     * @var int
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string
     * @SerializedName("note")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $note;

    /**
     * @var bool
     * @SerializedName("isRunning")
     * @Assert\NotNull()
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $isRunning;

    /**
     * @var int
     * @SerializedName("timeRecorded")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $timeRecorded;

    /**
     * Date the timer is create
     *
     * @var \DateTime
     * @SerializedName("createdAt")
     * @Assert\NotNull()
     * @Assert\DateTime()
     * @Type("DateTime")
     */
    protected $createdAt;

    /**
     * Date the timer is for
     *
     * @var \DateTime
     * @SerializedName("date")
     * @Assert\NotNull()
     * @Assert\Date()
     * @Type("DateTime")
     */
    protected $date;

    /**
     * @var Xvilo\Track\ApiServer\Model\TimerGitlab
     * @SerializedName("gitlab")
     * @Assert\NotNull()
     * @Assert\Type("Xvilo\Track\ApiServer\Model\TimerGitlab")
     * @Type("Xvilo\Track\ApiServer\Model\TimerGitlab")
     */
    protected $gitlab;

    /**
     * @var Xvilo\Track\ApiServer\Model\TimerFormatted
     * @SerializedName("formatted")
     * @Assert\NotNull()
     * @Assert\Type("Xvilo\Track\ApiServer\Model\TimerFormatted")
     * @Type("Xvilo\Track\ApiServer\Model\TimerFormatted")
     */
    protected $formatted;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->note = isset($data['note']) ? $data['note'] : null;
        $this->isRunning = isset($data['isRunning']) ? $data['isRunning'] : null;
        $this->timeRecorded = isset($data['timeRecorded']) ? $data['timeRecorded'] : null;
        $this->createdAt = isset($data['createdAt']) ? $data['createdAt'] : null;
        $this->date = isset($data['date']) ? $data['date'] : null;
        $this->gitlab = isset($data['gitlab']) ? $data['gitlab'] : null;
        $this->formatted = isset($data['formatted']) ? $data['formatted'] : null;
    }

    /**
     * Gets id.
     *
     * @return int
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int $id
     *
     * @return $this
     */
    public function setId(int $id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets note.
     *
     * @return string
     */
    public function getNote(): string
    {
        return $this->note;
    }

    /**
     * Sets note.
     *
     * @param string $note
     *
     * @return $this
     */
    public function setNote(string $note)
    {
        $this->note = $note;

        return $this;
    }

    /**
     * Gets isRunning.
     *
     * @return bool
     */
    public function isIsRunning(): bool
    {
        return $this->isRunning;
    }

    /**
     * Sets isRunning.
     *
     * @param bool $isRunning
     *
     * @return $this
     */
    public function setIsRunning(bool $isRunning)
    {
        $this->isRunning = $isRunning;

        return $this;
    }

    /**
     * Gets timeRecorded.
     *
     * @return int
     */
    public function getTimeRecorded(): int
    {
        return $this->timeRecorded;
    }

    /**
     * Sets timeRecorded.
     *
     * @param int $timeRecorded
     *
     * @return $this
     */
    public function setTimeRecorded(int $timeRecorded)
    {
        $this->timeRecorded = $timeRecorded;

        return $this;
    }

    /**
     * Gets createdAt.
     *
     * @return \DateTime
     */
    public function getCreatedAt(): \DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets createdAt.
     *
     * @param \DateTime $createdAt  Date the timer is create
     *
     * @return $this
     */
    public function setCreatedAt(\DateTime $createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Gets date.
     *
     * @return \DateTime
     */
    public function getDate(): \DateTime
    {
        return $this->date;
    }

    /**
     * Sets date.
     *
     * @param \DateTime $date  Date the timer is for
     *
     * @return $this
     */
    public function setDate(\DateTime $date)
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Gets gitlab.
     *
     * @return Xvilo\Track\ApiServer\Model\TimerGitlab
     */
    public function getGitlab(): TimerGitlab
    {
        return $this->gitlab;
    }

    /**
     * Sets gitlab.
     *
     * @param Xvilo\Track\ApiServer\Model\TimerGitlab $gitlab
     *
     * @return $this
     */
    public function setGitlab(TimerGitlab $gitlab)
    {
        $this->gitlab = $gitlab;

        return $this;
    }

    /**
     * Gets formatted.
     *
     * @return Xvilo\Track\ApiServer\Model\TimerFormatted
     */
    public function getFormatted(): TimerFormatted
    {
        return $this->formatted;
    }

    /**
     * Sets formatted.
     *
     * @param Xvilo\Track\ApiServer\Model\TimerFormatted $formatted
     *
     * @return $this
     */
    public function setFormatted(TimerFormatted $formatted)
    {
        $this->formatted = $formatted;

        return $this;
    }
}


